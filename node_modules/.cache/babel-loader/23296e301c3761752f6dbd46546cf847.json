{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\Caden Marketing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\Caden Marketing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\Caden Marketing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\Caden Marketing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\Caden Marketing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\Caden Marketing\\\\src\\\\dice.js\";\nimport React, { Component, Fragment } from \"react\";\nimport ReactDice from \"react-dice-complete\";\nimport \"react-dice-complete/dist/react-dice-complete.css\";\nimport random from \"random\";\n\nvar Dice = /*#__PURE__*/function (_Component) {\n  _inherits(Dice, _Component);\n\n  var _super = _createSuper(Dice);\n\n  function Dice(props) {\n    var _this;\n\n    _classCallCheck(this, Dice);\n\n    _this = _super.call(this, props);\n\n    _this.handleResult = function (key) {\n      //e.preventDefault();\n      console.log(key);\n\n      if (key === _this.state.sum) {\n        alert(\"YOU WIN\");\n        rollAll();\n      } else {\n        alert(\"TRY AGAIN\");\n      }\n    };\n\n    _this.state = {\n      sum: 0,\n      op: [\"\", \"\", \"\", \"\", \"\"]\n    };\n    _this.rollDoneCallback = _this.rollDoneCallback.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dice, [{\n    key: \"rollAll\",\n    value: function rollAll() {\n      this.reactDice.rollAll();\n    }\n  }, {\n    key: \"rollDoneCallback\",\n    value: function rollDoneCallback(num) {\n      var nop = [random.int(3, 36), random.int(3, 36), random.int(3, 36), random.int(3, 36), random.int(3, 36)];\n      console.log(\"You rolled a \".concat(num));\n      this.setState({\n        sum: num\n      });\n      var ix = random.int(0, 4);\n      nop[ix] = num;\n      this.setState({\n        op: nop\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"roll\",\n        onClick: function onClick() {\n          return _this2.rollAll();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, \"Roll Dice\"), /*#__PURE__*/React.createElement(ReactDice, {\n        numDice: this.props.number,\n        faceColor: \"grey\",\n        dotColor: \"rgb(0,0,0)\",\n        dieSize: \"50\",\n        rollTime: \".1\",\n        rollDone: this.rollDoneCallback,\n        disableIndividual: \"true\",\n        ref: function ref(dice) {\n          return _this2.reactDice = dice;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), this.state.op.map(function (key) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"roll\",\n          onClick: function onClick() {\n            return _this2.handleResult(key);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, key);\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, this.state.sum));\n    }\n  }]);\n\n  return Dice;\n}(Component);\n\nexport default Dice;","map":{"version":3,"sources":["C:/Users/tanmy/Downloads/Caden Marketing/src/dice.js"],"names":["React","Component","Fragment","ReactDice","random","Dice","props","handleResult","key","console","log","state","sum","alert","rollAll","op","rollDoneCallback","bind","reactDice","num","nop","int","setState","ix","number","dice","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport ReactDice from \"react-dice-complete\";\nimport \"react-dice-complete/dist/react-dice-complete.css\";\nimport random from \"random\";\nclass Dice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sum: 0,\n      op: [\"\", \"\", \"\", \"\", \"\"],\n    };\n    this.rollDoneCallback = this.rollDoneCallback.bind(this);\n  }\n  rollAll() {\n    this.reactDice.rollAll();\n  }\n\n  rollDoneCallback(num) {\n    const nop = [\n      random.int(3, 36),\n      random.int(3, 36),\n      random.int(3, 36),\n      random.int(3, 36),\n      random.int(3, 36),\n    ];\n    console.log(`You rolled a ${num}`);\n    this.setState({ sum: num });\n    var ix = random.int(0, 4);\n\n    nop[ix] = num;\n    this.setState({ op: nop });\n  }\n  handleResult = (key) => {\n    //e.preventDefault();\n    console.log(key);\n    if (key === this.state.sum) {\n      alert(\"YOU WIN\");\n      rollAll();\n    } else {\n      alert(\"TRY AGAIN\");\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <button className=\"roll\" onClick={() => this.rollAll()}>\n          Roll Dice\n        </button>\n        <ReactDice\n          numDice={this.props.number}\n          faceColor=\"grey\"\n          dotColor=\"rgb(0,0,0)\"\n          dieSize=\"50\"\n          rollTime=\".1\"\n          rollDone={this.rollDoneCallback}\n          disableIndividual=\"true\"\n          ref={(dice) => (this.reactDice = dice)}\n        />\n        {this.state.op.map((key) => {\n          return (\n            <button className=\"roll\" onClick={() => this.handleResult(key)}>\n              {key}\n            </button>\n          );\n        })}\n\n        <h1>{this.state.sum}</h1>\n      </Fragment>\n    );\n  }\n}\n\nexport default Dice;\n"]},"metadata":{},"sourceType":"module"}