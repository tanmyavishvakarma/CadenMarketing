{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar TimerModel_1 = require(\"../../lib/models/TimerModel\");\n\nvar TimerContext = react_1.default.createContext({\n  ms: 0,\n  s: 0,\n  m: 0,\n  h: 0,\n  d: 0,\n  formatValue: function formatValue(value) {\n    return String(value);\n  }\n});\n\nvar TimerValue = function TimerValue(_a) {\n  var unit = _a.unit,\n      formatValue = _a.formatValue;\n  return react_1.default.createElement(Timer.Consumer, null, function (props) {\n    var format = formatValue || props.formatValue;\n    return format(props[unit]) || null;\n  });\n};\n\nvar Milliseconds = function Milliseconds(props) {\n  return react_1.default.createElement(TimerValue, __assign({\n    unit: \"ms\"\n  }, props));\n};\n\nvar Seconds = function Seconds(props) {\n  return react_1.default.createElement(TimerValue, __assign({\n    unit: \"s\"\n  }, props));\n};\n\nvar Minutes = function Minutes(props) {\n  return react_1.default.createElement(TimerValue, __assign({\n    unit: \"m\"\n  }, props));\n};\n\nvar Hours = function Hours(props) {\n  return react_1.default.createElement(TimerValue, __assign({\n    unit: \"h\"\n  }, props));\n};\n\nvar Days = function Days(props) {\n  return react_1.default.createElement(TimerValue, __assign({\n    unit: \"d\"\n  }, props));\n};\n\nvar Timer =\n/** @class */\nfunction (_super) {\n  __extends(Timer, _super);\n\n  function Timer(props) {\n    var _this = _super.call(this, props) || this;\n\n    var _a = _this.props,\n        initialTime = _a.initialTime,\n        direction = _a.direction,\n        timeToUpdate = _a.timeToUpdate,\n        lastUnit = _a.lastUnit,\n        checkpoints = _a.checkpoints;\n    _this.timer = new TimerModel_1.TimerModel({\n      initialTime: initialTime,\n      direction: direction,\n      timeToUpdate: timeToUpdate,\n      lastUnit: lastUnit,\n      checkpoints: checkpoints,\n      onChange: _this.setState.bind(_this)\n    });\n    _this.state = __assign({}, _this.timer.timeParts, {\n      timerState: 'INITED'\n    });\n    _this.start = _this.start.bind(_this);\n    _this.pause = _this.pause.bind(_this);\n    _this.resume = _this.resume.bind(_this);\n    _this.stop = _this.stop.bind(_this);\n    _this.reset = _this.reset.bind(_this);\n    _this.setTime = _this.setTime.bind(_this);\n    _this.getTime = _this.getTime.bind(_this);\n    _this.getTimerState = _this.getTimerState.bind(_this);\n    _this.setDirection = _this.setDirection.bind(_this);\n    _this.setCheckpoints = _this.setCheckpoints.bind(_this);\n    return _this;\n  }\n\n  Timer.getUI = function (children, renderProps) {\n    if (children === null) {\n      return null;\n    }\n\n    if (Array.isArray(children) || react_1.default.isValidElement(children)) {\n      return children;\n    }\n\n    if (children.prototype && children.prototype.isReactComponent) {\n      return react_1.default.createElement(children, renderProps);\n    }\n\n    if (typeof children === 'function') {\n      return children(renderProps);\n    }\n\n    throw new Error('Please use one of the supported APIs for children');\n  };\n\n  Timer.prototype.componentDidMount = function () {\n    var startImmediately = this.props.startImmediately;\n    startImmediately && this.timer.start();\n  };\n\n  Timer.prototype.componentWillUnmount = function () {\n    this.timer.stop();\n  };\n\n  Timer.prototype.render = function () {\n    var _a = this,\n        start = _a.start,\n        pause = _a.pause,\n        resume = _a.resume,\n        stop = _a.stop,\n        reset = _a.reset,\n        getTime = _a.getTime,\n        getTimerState = _a.getTimerState,\n        setTime = _a.setTime,\n        setDirection = _a.setDirection,\n        setCheckpoints = _a.setCheckpoints;\n\n    var _b = this.state,\n        ms = _b.ms,\n        s = _b.s,\n        m = _b.m,\n        h = _b.h,\n        d = _b.d,\n        timerState = _b.timerState;\n    var _c = this.props,\n        formatValue = _c.formatValue,\n        children = _c.children;\n    return react_1.default.createElement(TimerContext.Provider, {\n      value: {\n        ms: ms,\n        s: s,\n        m: m,\n        h: h,\n        d: d,\n        formatValue: formatValue\n      }\n    }, Timer.getUI(children, {\n      start: start,\n      resume: resume,\n      pause: pause,\n      stop: stop,\n      reset: reset,\n      getTime: getTime,\n      getTimerState: getTimerState,\n      setTime: setTime,\n      setDirection: setDirection,\n      setCheckpoints: setCheckpoints,\n      timerState: timerState\n    }));\n  };\n\n  Timer.prototype.setTime = function (time) {\n    this.timer.setTime(time);\n  };\n\n  Timer.prototype.getTime = function () {\n    return this.timer.getTime();\n  };\n\n  Timer.prototype.getTimerState = function () {\n    return this.timer.state;\n  };\n\n  Timer.prototype.setDirection = function (direction) {\n    this.timer.setDirection(direction);\n  };\n\n  Timer.prototype.setCheckpoints = function (checkpoints) {\n    this.timer.setCheckpoints(checkpoints);\n  };\n\n  Timer.prototype.start = function () {\n    this.timer.start();\n    this.props.onStart();\n  };\n\n  Timer.prototype.stop = function () {\n    this.timer.stop();\n    this.props.onStop();\n  };\n\n  Timer.prototype.pause = function () {\n    this.timer.pause();\n    this.props.onPause();\n  };\n\n  Timer.prototype.reset = function () {\n    this.timer.reset();\n    this.props.onReset();\n  };\n\n  Timer.prototype.resume = function () {\n    this.timer.resume();\n    this.props.onResume();\n  };\n\n  Timer.Consumer = TimerContext.Consumer;\n  Timer.Milliseconds = Milliseconds;\n  Timer.Seconds = Seconds;\n  Timer.Minutes = Minutes;\n  Timer.Hours = Hours;\n  Timer.Days = Days;\n  Timer.defaultProps = {\n    timeToUpdate: 1000,\n    direction: 'forward',\n    initialTime: 0,\n    startImmediately: true,\n    lastUnit: 'd',\n    checkpoints: [],\n    children: null,\n    formatValue: function formatValue(value) {\n      return String(value);\n    },\n    onStart: function onStart() {},\n    onResume: function onResume() {},\n    onPause: function onPause() {},\n    onStop: function onStop() {},\n    onReset: function onReset() {}\n  };\n  return Timer;\n}(react_1.default.PureComponent);\n\nexports.default = Timer;","map":null,"metadata":{},"sourceType":"script"}