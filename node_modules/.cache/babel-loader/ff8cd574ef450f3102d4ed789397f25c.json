{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar TimerModel_1 = require(\"../lib/models/TimerModel\");\n\nvar getTimeParts_1 = __importDefault(require(\"../lib/helpers/getTimeParts\"));\n\nfunction useTimer(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.initialTime,\n      initialTime = _c === void 0 ? 0 : _c,\n      _d = _b.direction,\n      direction = _d === void 0 ? \"forward\" : _d,\n      _e = _b.timeToUpdate,\n      timeToUpdate = _e === void 0 ? 1000 : _e,\n      _f = _b.startImmediately,\n      startImmediately = _f === void 0 ? true : _f,\n      _g = _b.lastUnit,\n      lastUnit = _g === void 0 ? \"d\" : _g,\n      _h = _b.checkpoints,\n      checkpoints = _h === void 0 ? [] : _h,\n      onStart = _b.onStart,\n      onResume = _b.onResume,\n      onPause = _b.onPause,\n      onStop = _b.onStop,\n      onReset = _b.onReset;\n\n  var _j = react_1.useState(__assign({}, getTimeParts_1.default(initialTime < 0 ? 0 : initialTime, lastUnit), {\n    state: 'INITED'\n  })),\n      timerValues = _j[0],\n      setTimerValues = _j[1];\n\n  var timer = react_1.useMemo(function () {\n    return new TimerModel_1.TimerModel({\n      initialTime: initialTime,\n      direction: direction,\n      timeToUpdate: timeToUpdate,\n      lastUnit: lastUnit,\n      checkpoints: checkpoints,\n      onChange: function onChange(timerValue) {\n        return setTimerValues(function (state) {\n          return __assign({}, state, timerValue);\n        });\n      }\n    });\n  }, []);\n  var setTime = react_1.useCallback(function (time) {\n    return timer.setTime(time);\n  }, [timer]);\n  var getTime = react_1.useCallback(function () {\n    return timer.getTime();\n  }, [timer]);\n  var getTimerState = react_1.useCallback(function () {\n    return timer.state;\n  }, [timer]);\n  var setDirection = react_1.useCallback(function (direction) {\n    return timer.setDirection(direction);\n  }, [timer]);\n  var setLastUnit = react_1.useCallback(function (lastUnit) {\n    return timer.setLastUnit(lastUnit);\n  }, [timer]);\n  var setCheckpoints = react_1.useCallback(function (checkpoints) {\n    return timer.setCheckpoints(checkpoints);\n  }, [timer]);\n  var setTimeToUpdate = react_1.useCallback(function (interval) {\n    return timer.setTimeToUpdate(interval);\n  }, [timer]);\n  var start = react_1.useCallback(function () {\n    timer.start();\n    onStart && onStart();\n  }, [timer, onStart]);\n  var stop = react_1.useCallback(function () {\n    timer.stop();\n    onStop && onStop();\n  }, [timer, onStop]);\n  var pause = react_1.useCallback(function () {\n    timer.pause();\n    onPause && onPause();\n  }, [timer, onPause]);\n  var reset = react_1.useCallback(function () {\n    timer.reset();\n    onReset && onReset();\n  }, [timer, onReset]);\n  var resume = react_1.useCallback(function () {\n    timer.resume();\n    onResume && onResume();\n  }, [timer, onResume]);\n  var controls = react_1.useMemo(function () {\n    return {\n      start: start,\n      stop: stop,\n      pause: pause,\n      reset: reset,\n      resume: resume,\n      setTime: setTime,\n      getTime: getTime,\n      getTimerState: getTimerState,\n      setDirection: setDirection,\n      setLastUnit: setLastUnit,\n      setTimeToUpdate: setTimeToUpdate,\n      setCheckpoints: setCheckpoints\n    };\n  }, [start, stop, pause, reset, resume, setTime, getTime, getTimerState, setDirection, setLastUnit, setTimeToUpdate, setCheckpoints]);\n  react_1.useEffect(function () {\n    if (startImmediately) {\n      start();\n    }\n\n    return function () {\n      stop();\n    };\n  }, []);\n  return {\n    controls: controls,\n    value: timerValues\n  };\n}\n\nexports.useTimer = useTimer;","map":null,"metadata":{},"sourceType":"script"}