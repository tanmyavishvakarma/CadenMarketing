{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\dice-roll-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\dice-roll-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\dice-roll-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\dice-roll-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\tanmy\\\\Downloads\\\\dice-roll-forked\\\\src\\\\dice.js\";\nimport React, { Component, Fragment } from \"react\";\nimport ReactDice from \"react-dice-complete\";\nimport \"react-dice-complete/dist/react-dice-complete.css\";\n\nvar Dice = /*#__PURE__*/function (_Component) {\n  _inherits(Dice, _Component);\n\n  var _super = _createSuper(Dice);\n\n  function Dice() {\n    _classCallCheck(this, Dice);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dice, [{\n    key: \"rollAll\",\n    value: function rollAll() {\n      this.reactDice.rollAll();\n    }\n  }, {\n    key: \"rollDoneCallback\",\n    value: function rollDoneCallback(num) {\n      console.log(\"You rolled a \".concat(num));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"roll\",\n        onClick: function onClick() {\n          return _this.rollAll();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"Roll Dice\"), /*#__PURE__*/React.createElement(ReactDice, {\n        numDice: this.props.number,\n        faceColor: \"grey\",\n        dotColor: \"rgb(0,0,0)\",\n        dieSize: \"50\",\n        rollTime: \".1\",\n        rollDone: this.rollDoneCallback,\n        disableIndividual: \"true\",\n        ref: function ref(dice) {\n          return _this.reactDice = dice;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"roll\",\n        onClick: function onClick() {\n          return _this.rollAll();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"roll\",\n        onClick: function onClick() {\n          return _this.rollAll();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"roll\",\n        onClick: function onClick() {\n          return _this.rollAll();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Dice;\n}(Component);\n\nexport default Dice;","map":{"version":3,"sources":["C:/Users/tanmy/Downloads/dice-roll-forked/src/dice.js"],"names":["React","Component","Fragment","ReactDice","Dice","reactDice","rollAll","num","console","log","props","number","rollDoneCallback","dice"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAO,kDAAP;;IAEMC,I;;;;;;;;;;;;;WACJ,mBAAU;AACR,WAAKC,SAAL,CAAeC,OAAf;AACD;;;WAED,0BAAiBC,GAAjB,EAAsB;AACpBC,MAAAA,OAAO,CAACC,GAAR,wBAA4BF,GAA5B;AACD;;;WAED,kBAAS;AAAA;;AACP,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACD,OAAL,EAAN;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,oBAAC,SAAD;AACE,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWC,MADtB;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,QAAQ,EAAC,YAHX;AAIE,QAAA,OAAO,EAAC,IAJV;AAKE,QAAA,QAAQ,EAAC,IALX;AAME,QAAA,QAAQ,EAAE,KAAKC,gBANjB;AAOE,QAAA,iBAAiB,EAAC,MAPpB;AAQE,QAAA,GAAG,EAAE,aAACC,IAAD;AAAA,iBAAW,KAAI,CAACR,SAAL,GAAiBQ,IAA5B;AAAA,SARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAeE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACP,OAAL,EAAN;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,eAgBE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACA,OAAL,EAAN;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,eAiBE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACA,OAAL,EAAN;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,CADF;AAqBD;;;;EA/BgBL,S;;AAkCnB,eAAeG,IAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport ReactDice from \"react-dice-complete\";\nimport \"react-dice-complete/dist/react-dice-complete.css\";\n\nclass Dice extends Component {\n  rollAll() {\n    this.reactDice.rollAll();\n  }\n\n  rollDoneCallback(num) {\n    console.log(`You rolled a ${num}`);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <button className=\"roll\" onClick={() => this.rollAll()}>\n          Roll Dice\n        </button>\n        <ReactDice\n          numDice={this.props.number}\n          faceColor=\"grey\"\n          dotColor=\"rgb(0,0,0)\"\n          dieSize=\"50\"\n          rollTime=\".1\"\n          rollDone={this.rollDoneCallback}\n          disableIndividual=\"true\"\n          ref={(dice) => (this.reactDice = dice)}\n        />\n\n        <button className=\"roll\" onClick={() => this.rollAll()}></button>\n        <button className=\"roll\" onClick={() => this.rollAll()}></button>\n        <button className=\"roll\" onClick={() => this.rollAll()}></button>\n      </Fragment>\n    );\n  }\n}\n\nexport default Dice;\n"]},"metadata":{},"sourceType":"module"}